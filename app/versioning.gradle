def excludedBranches =  ['main', 'master', 'default', 'tmp', 'temp']

def printe(Exception e) {
    println 'Versioning error'
    e.printStackTrace()
}

def printe(String error) {
    println 'Versioning error: ' + error
}

def run(String... args) {
    def out = new ByteArrayOutputStream()

    exec {
        commandLine(args)
        standardOutput = out
    }

    return out.toString()
}

project.ext.getVersionCode = {
    try {
        def code = run('git', 'tag', '--list')

        return code.split('\n').size()
    }
    catch (e) {
        printe e
        return null
    }
}

project.ext.getVersionName = {
    try {
        def tag = run('git', 'describe', '--tags', '--abbrev=0').trim()
        def isDirty = !run('git', 'status', '-s').trim().isEmpty()
        def isTagged

        try {
            run('git', 'describe', '--exact-match')

            isTagged = true
        } catch (ignored) {
            isTagged = false
        }

        def tagName = tag

        if (!isTagged) {
            def hash
            def sinceLast
            def branch

            try {
                hash = run('git', 'log', '-1', '--format="%h"').trim()
            } catch (e) {
                printe e
                return null
            }

            try {
                sinceLast = run('git', 'rev-list', tag + '..', '--count').trim()
            } catch(e) {
                printe e
                return null
            }

            try {
                branch = run('git', 'branch', '--show-current').trim()
            } catch(e) {
                printe e
                return null
            }

            tagName += '-' + hash + '-' + sinceLast

            if (!(branch in excludedBranches)) {
                tagName += '-' + branch
            }
        }

        if (isDirty) {
            tagName += '-t' + System.currentTimeMillis()
        }

        println 'Tag name: ' + tagName
        return tagName
    } catch (e) {
        printe e
        return null
    }
}